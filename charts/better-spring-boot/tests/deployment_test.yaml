suite: deployment
templates:
  - deployment.yaml
  - configMap.appConfig.yaml
tests:
  - it: supports profiles as strings
    set:
      image.repository: goatfryed/spring-boot-echo
      spring.profiles.active: "k8s, local, something"
      deployment.recreatePodStrategy: false
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SPRING_PROFILES_ACTIVE
            value: "k8s, local, something"
  - it: supports profiles as arrays
    set:
      image.repository: goatfryed/spring-boot-echo
      spring.profiles.active: [k8s, local, something]
      deployment.recreatePodStrategy: false
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SPRING_PROFILES_ACTIVE
            value: "k8s, local, something"
  - it: calculates checksum over app config
    set:
      image.repository: goatfryed/spring-boot-echo
      spring.config:
        profile1:
          values:
            foo: foo
        profile2:
          values:
            bar: bar
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.metadata.labels.release/checksum-app-config
          value: ee5143893af613611dd5c59559e249c5612e2f11
  - it: calculates checksum over app config with stable sort
    set:
      image:
        repository: goatfryed/spring-boot-echo
      spring:
        profiles:
          active: profile2, profile1
        config:
          profile2:
            values:
              bar: bar
          profile1:
            values:
              foo: foo
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.metadata.labels.release/checksum-app-config
          value: ee5143893af613611dd5c59559e249c5612e2f11
  - it: calculates checksum over active app config
    set:
      image.repository: goatfryed/spring-boot-echo
      spring:
        profiles:
          active: profile1, profile2
        config:
          profile1:
            values:
              foo: foo
          profile2:
            values:
              bar: bar
          profile3:
            values:
              foo: bar
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.metadata.labels.release/checksum-app-config
          value: ee5143893af613611dd5c59559e249c5612e2f11
  - it: supports user provided environment variables
    set:
      image.repository: goatfryed/spring-boot-echo
      spring.environmentVariable:
        FOO: BAR
        CHUCK: NORRIS
        MUTE: ""
        SILENT: ~
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CHUCK
            value: NORRIS
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: FOO
            value: BAR
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: MUTE
            value: ""
      - template: deployment.yaml
        notEqual:
          path: spec.template.spec.containers[0].env[*].name
          value: SILENT
  - it: omits managed environment variables
    set:
      image.repository: goatfryed/spring-boot-echo
      spring.environmentVariable:
        SPRING_PROFILES_ACTIVE: test
        SPRING_CONFIG_ADDITIONAL_LOCATION: /other/path
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SPRING_CONFIG_ADDITIONAL_LOCATION
            value: optional:/app/config/*/
      - template: deployment.yaml
        notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: SPRING_PROFILES_ACTIVE
            value: test
  - it: adds random label on podRecreationStrategy always
    set:
      image.repository: goatfryed/spring-boot-echo
      deployment.recreatePodStrategy: always
    asserts:
      - template: deployment.yaml
        matchRegex:
          path: spec.template.metadata.labels.release/roll-me
          pattern: "^0-"
      - template: deployment.yaml
        notExists:
          path: spec.template.metadata.labels.release/checksum-app-config
  - it: adds config checksum label on podRecreationStrategy values-changed
    set:
      image.repository: goatfryed/spring-boot-echo
      deployment.recreatePodStrategy: values-changed
      spring.config.profile.values.foo: bar
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.metadata.labels.release/checksum-app-config
          value: dfe9918a99471ea982fc5adb3682971a9697a231
      - template: deployment.yaml
        notExists:
          path: spec.template.metadata.labels.release/roll-me
  - it: allows disable of recreation labels
    set:
      image.repository: goatfryed/spring-boot-echo
      deployment.recreatePodStrategy: ~
    asserts:
      - template: deployment.yaml
        notExists:
          path: spec.template.metadata.labels.release/checksum-app-config
      - template: deployment.yaml
        notExists:
          path: spec.template.metadata.labels.release/roll-me
  - it: supports startup probe
    values:
      - "values/values.base.yaml"
    set:
      healthChecks:
        startupProbe:
          enabled: true
    asserts:
      - template: deployment.yaml
        exists:
          path: spec.template.spec.containers[0].startupProbe
  - it: supports liveness probe
    values:
      - "values/values.base.yaml"
    set:
      healthChecks:
        livenessProbe:
          enabled: true
    asserts:
      - template: deployment.yaml
        exists:
          path: spec.template.spec.containers[0].livenessProbe
  - it: supports readiness probe
    values:
      - "values/values.base.yaml"
    set:
      healthChecks:
        readinessProbe:
          enabled: true
    asserts:
      - template: deployment.yaml
        exists:
          path: spec.template.spec.containers[0].readinessProbe
---
suite: deployment/application name
templates:
  - deployment.yaml
  - configMap.appConfig.yaml
tests:
  - it: sets spring application name to release name by default
    values:
      - "values/values.base.yaml"
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SPRING_APPLICATION_NAME
            value: RELEASE-NAME
  - it: follows full name override
    values:
      - "values/values.base.yaml"
    set:
      fullnameOverride: myApplicationName
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SPRING_APPLICATION_NAME
            value: myApplicationName


