apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-boot.fullname" . }}
  labels:
    {{- include "spring-boot.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spring-boot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spring-boot.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spring-boot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "spring.container.env" . | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: helm-application-properties
              mountPath: /app/config/helm-config
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: helm-application-properties
          configMap:
            name: {{ include "spring-boot.propertiesConfigMapName" . }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


{{- define "spring.container.env" -}}
  {{- $envVars := dict -}}
  {{- $activeProfiles := include "spring.container.activeProfiles" . -}}
  {{- $envVars = merge $envVars (dict "SPRING_PROFILES_ACTIVE" $activeProfiles) -}}
  {{- range $key, $value := $envVars -}}
- name: {{ $key }}
  value: {{ $value }}
  {{- end -}}
{{- end -}}

{{- define "spring.container.activeProfiles" -}}
{{ $activeProfiles := .Values.spring.profiles.active }}
{{- if eq (typeOf $activeProfiles) "string" -}}
  {{ $activeProfiles }}
{{- else if eq (typeOf $activeProfiles) "[]interface {}" -}}
  {{ join ", " $activeProfiles }}
{{- else if eq $activeProfiles nil -}}
  {{- include "spring.container.defaultProfiles" . -}}
{{- else -}}
  {{ required "Illegal argument for spring.container.activeProfiles" nil }}
{{- end -}}
{{- end -}}

{{- define "spring.container.defaultProfiles" -}}
{{- $profiles := list -}}
{{- range $key,$value := .Values.spring.config -}}
{{- $profiles = append $profiles $key -}}
{{- end -}}
{{- join ", " $profiles -}}
{{- end -}}