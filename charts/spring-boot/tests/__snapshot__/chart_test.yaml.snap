works with minimal configuration:
  1: |
    raw: |
      1. Get the application URL by running these commands:
        export POD_NAME=$(kubectl get pods --namespace NAMESPACE -l "app.kubernetes.io/name=spring-boot,app.kubernetes.io/instance=RELEASE-NAME" -o jsonpath="{.items[0].metadata.name}")
        export CONTAINER_PORT=$(kubectl get pod --namespace NAMESPACE $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
        echo "Visit http://127.0.0.1:8080 to use your application"
        kubectl --namespace NAMESPACE port-forward $POD_NAME 8080:$CONTAINER_PORT
  2: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-boot
        helm.sh/chart: spring-boot-0.1.0
      name: RELEASE-NAME-spring-boot
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: spring-boot
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: spring-boot
            helm.sh/chart: spring-boot-0.1.0
        spec:
          containers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: null
              image: goatfryed/spring-boot-echo:latest
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /
                  port: http
              name: spring-boot
              ports:
                - containerPort: 80
                  name: http
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /
                  port: http
              resources: {}
              securityContext: {}
              volumeMounts:
                - mountPath: /app/config/helm-config
                  name: helm-config
          securityContext: {}
          serviceAccountName: RELEASE-NAME-spring-boot
          volumes:
            - configMap:
                name: RELEASE-NAME-spring-boot-application-properties
              name: helm-config
  3: |
    apiVersion: v1
    data: null
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME-spring-boot-application-properties
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-boot
        helm.sh/chart: spring-boot-0.1.0
      name: RELEASE-NAME-spring-boot
    spec:
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: http
      selector:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: spring-boot
      type: ClusterIP
  5: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-boot
        helm.sh/chart: spring-boot-0.1.0
      name: RELEASE-NAME-spring-boot
  6: |
    apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        helm.sh/hook: test
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-boot
        helm.sh/chart: spring-boot-0.1.0
      name: RELEASE-NAME-spring-boot-test-connection
    spec:
      containers:
        - args:
            - RELEASE-NAME-spring-boot:80
          command:
            - wget
          image: busybox
          name: wget
      restartPolicy: Never
works with minimal configuration (pipeline-safe):
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-boot
        helm.sh/chart: spring-boot-0.1.0
      name: RELEASE-NAME-spring-boot
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: spring-boot
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: spring-boot
            helm.sh/chart: spring-boot-0.1.0
        spec:
          containers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: null
              image: goatfryed/spring-boot-echo:latest
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /
                  port: http
              name: spring-boot
              ports:
                - containerPort: 80
                  name: http
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /
                  port: http
              resources: {}
              securityContext: {}
              volumeMounts:
                - mountPath: /app/config/helm-config
                  name: helm-config
          securityContext: {}
          serviceAccountName: RELEASE-NAME-spring-boot
          volumes:
            - configMap:
                name: RELEASE-NAME-spring-boot-application-properties
              name: helm-config
  2: |
    apiVersion: v1
    data: null
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME-spring-boot-application-properties
  3: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-boot
        helm.sh/chart: spring-boot-0.1.0
      name: RELEASE-NAME-spring-boot
    spec:
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: http
      selector:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: spring-boot
      type: ClusterIP
  4: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-boot
        helm.sh/chart: spring-boot-0.1.0
      name: RELEASE-NAME-spring-boot
